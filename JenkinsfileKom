pipeline {
    agent any
    environment {
        GITHUB_USER = credentials('github')  // Accede a las credenciales de GitHub
    }
    stages {
        stage('Checkout código') {
            steps {
                checkout scm  // Jenkins maneja automáticamente el checkout en Multibranch Pipeline
            }
        }
        stage('Konvert') {
            steps {
                sh '''
                mkdir -p k8s-manifests-j
                kompose convert -f docker-compose.yaml -o k8s-manifests-j/
                '''
            }
        }
        stage('Push') {
            steps {
                script {
                    // Configura el nombre de usuario y correo para los commits
                    sh 'git config --global user.name "Jenkins"'
                    sh 'git config --global user.email "jenkins@yourdomain.com"'

                    // Haz un pull con rebase para asegurar que tu rama local esté al día
                    sh '''
                    git pull --rebase https://${GITHUB_USER_USR}:${GITHUB_USER_PSW}@github.com/AlbertoGuC/TFM_K8s.git main || true
                    ''' // Se usa || true para evitar que falle si no hay cambios

                    // Agrega los archivos modificados
                    sh 'git add k8s-manifests-j/'

                    // Realiza el commit
                    sh 'git commit -m "Auto-converted docker-compose to Kubernetes manifests" || echo "No changes to commit"'

                    // Realiza el push
                    sh 'git push https://${GITHUB_USER_USR}:${GITHUB_USER_PSW}@github.com/AlbertoGuC/TFM_K8s.git main'
                }
            }
        }
    }
}
